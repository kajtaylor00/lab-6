import java.util.Scanner;

public class ConnectFour {


   //print game board on screen
   public static void printBoard(char[][]array){
      int width = array.length;
      int height = array[0].length;

      //initialize board if it has not been done yet
      if (array[width - 1][height - 1] != '-' && array[width - 1][height - 1] != 'x' && array[width - 1][height - 1] != 'o'){
         initializeBoard(array);
      }

      //print board with game pieces
      for (int i = width - 1; i >= 0; i--){
         for (int j = 0; j < height ; j++){
            System.out.print(array[i][j]+ " ");
         }
         System.out.println(" "); /* makes a newline on the game board*/
      }

   }
   //initially assign each index in the 2-D array
   public static void initializeBoard(char[][] array){
     int width = array.length;
     int height = array[0].length;
      for (int i = 0; i < width; i++){
         for (int j = 0; j < height; j++){
            array[i][j] = '-';
         }
      }
   }
   //Insert player piece into game board
   public static int insertChip(char[][]array, int col, char chipType){
      int len = array.length;
      int row = 0;
      while (row < len) {
         //check availability of column
         if (array[row][col] == '-'){
            array[row][col] = chipType;
            break;
         }
         row++;
      }
      return row;
   }

   //Check for winner
   public static boolean checkIfWinner(char[][] array, int col, int row, char chipType){
      int len = array.length;
      int height = array[0].length;
      if (row + 3 < height){
         for(int i = 0; i <= len - 3; i++) {
            for (int j = 0; j <= height - 1; j++) {
               //check for vertical win
               if (array[i][j] != '-' && array[i][j] == array[i + 1][j] && array[i][j] == array[i + 2][j] && array[i][j] == array[i + 3][j]) {
                  return true;
               }
            }
         }
      }
      if (col < len){
         for(int i = 0; i < len - 1; i++) {
            for (int j = 0; j < height - 3; j++) {
               //check for horizontal win
               if (array[i][j] != '-' && array[i][j] == array[i][j + 1] && array[i][j] == array[i][j + 2] && array[i][j] == array[i][j + 3]) {
                  return true;
               }
            }
         }
      }

      //allows while loop inside main method to continue
      return false;
   }

   //Check for tie in game
   public static boolean checkIfTie(char[][] array, int col, int row, char chipType) {
      int len = array.length;
      int height = array[0].length;

      for (int i = 0; i <= len - 1; i++) {
         for (int j = 0; j <= height - 1; j++) {
            if (array[i][j] == '-')
               return false;
         }
      }

      //allows while loop inside main method to continue
      return true;
   }

   //switch players each turn
   public static int switchPlayer(int playerNumber)
   {
      int newPlayerNumber = 0;
      if (playerNumber == 0){
         newPlayerNumber = 1;
      }
      if(playerNumber == 1) {
         newPlayerNumber = 2;
      }
      if(playerNumber == 2) {
         newPlayerNumber = 1;
      }
      return newPlayerNumber;

   }

    public static void main(String []args) {
       Scanner scanner = new Scanner(System.in);
       //Asks the player the size of the board
       System.out.print("What would you like the height of the board to be? ");
       int height = scanner.nextInt();
       System.out.print("What would you like the length of the board to be? ");
       int width = scanner.nextInt();
       char[][] board = new char[height][width];
       printBoard(board); /*print board at the beginning*/
       char chip1 = 'x';
       char chip2 = 'o';
       System.out.println("Player 1: " + chip1);
       System.out.println("Player 2: " + chip2);
       boolean winner = false;
       boolean tie = false;
       int player = 0;

       //while loop to allow multiple turns
       while (!winner && !tie) {
          player = switchPlayer(player); /*switch players*/
          System.out.println("Player " + player + ": Which column would you like to choose? ");
          int col = scanner.nextInt();
          int row = 0;
          if (player == 1) {
             insertChip(board, col, chip1);                    /*insert game piece in board*/
             printBoard(board);                                /*print board after each turn*/
             winner = checkIfWinner(board, col, row, chip1);   /*use method to check for winner*/
             tie = checkIfTie(board, col, row, chip1);         /*use method to check for tie*/
          }
          if (player == 2) {
             insertChip(board, col, chip2);
             printBoard(board);
             winner = checkIfWinner(board, col, row, chip2);
             tie = checkIfTie(board, col, row, chip2);
          }

       }
       //when there is a winner
       if (winner == true) {
          System.out.println("Player " + player + " won the game!");
       }
       //when there is a tie
       if (tie == true){
          System.out.println("Draw. Nobody wins.");
       }
    }
}
